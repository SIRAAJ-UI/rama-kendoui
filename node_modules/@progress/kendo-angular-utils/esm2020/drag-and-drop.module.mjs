/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { DragTargetDirective } from './drag-and-drop/dragtarget.directive';
import { DragHandleDirective } from './drag-and-drop/draghandle.directive';
import { DropTargetDirective } from './drag-and-drop/droptarget.directive';
import { DragTargetContainerDirective } from './drag-and-drop/dragtarget-container.directive';
import { DropTargetContainerDirective } from './drag-and-drop/droptarget-container.directive';
import { HintComponent } from './drag-and-drop/hint.component';
import * as i0 from "@angular/core";
const EXPORTS = [
    DragTargetDirective,
    DragHandleDirective,
    DropTargetDirective,
    DragTargetContainerDirective,
    DropTargetContainerDirective,
    HintComponent
];
/**
 * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])
 * definition for the Drag and Drop directives.
 *
 * @example
 *
 * ```ts-no-run
 * // Import the DragAndDrop module
 * import { DragAndDropModule } from '@progress/kendo-angular-utils';
 *
 * // The browser platform with a compiler
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 *
 * import { NgModule } from '@angular/core';
 *
 * // Import the app component
 * import { AppComponent } from './app.component';
 *
 * // Define the app module
 * _@NgModule({
 *     declarations: [AppComponent], // declare app component
 *     imports:      [BrowserModule, DragAndDropModule], // import DragAndDropModule module
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * // Compile and launch the module
 * platformBrowserDynamic().bootstrapModule(AppModule);
 *
 * ```
 */
export class DragAndDropModule {
}
DragAndDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: DragAndDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DragAndDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: DragAndDropModule, declarations: [DragTargetDirective,
        DragHandleDirective,
        DropTargetDirective,
        DragTargetContainerDirective,
        DropTargetContainerDirective,
        HintComponent], imports: [CommonModule], exports: [DragTargetDirective,
        DragHandleDirective,
        DropTargetDirective,
        DragTargetContainerDirective,
        DropTargetContainerDirective,
        HintComponent] });
DragAndDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: DragAndDropModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: DragAndDropModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...EXPORTS],
                    exports: [...EXPORTS],
                    imports: [CommonModule],
                    entryComponents: [HintComponent]
                }]
        }] });
